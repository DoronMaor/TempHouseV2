#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    May 07, 2022 07:04:00 PM +0300  platform: Windows NT
import datetime
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import clientf.tk_frames.search_page as search_page

def main(frame, func_dict, top, *args):
    '''Main entry point for the application.'''
    global root, today
    root = top
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root

    act_vl = tk.BooleanVar()
    pst_vl = tk.BooleanVar()
    act_vl.set(False)
    pst_vl.set(False)
    today = func_dict['get_date']()
    _w1 = search_page.win_search(frame, func_dict, pst_vl, act_vl ,_top1)
    root.mainloop()


def on_change(id_entry, past_entry, act_entry, func_dict, lst_box, *args):
    """
    Sends a message to the server to get the data.
    """
    id = id_entry.get()
    past_entry = past_entry.get()
    act_entry = act_entry.get()
    resvrs = func_dict['get_specific_user_resvs'](id if len(id) >= 1 else None ,past_entry, act_entry)
    if resvrs:
        lst_box.delete(0, END)
        for res in resvrs:
            if is_active(res) and act_entry:
                lst_box.insert(END, get_res_info(func_dict, res))
            elif not is_active(res) and past_entry == True:
                lst_box.insert(END, get_res_info(func_dict, res))
    else:
        lst_box.delete(0, END)
        lst_box.insert(END, 'No results found')

    if lst_box.size() == 0:
        lst_box.insert(END, 'No results found')


def get_res_info(func_dict, res):
    st = ""
    if res[0] is None:
        return "Apartment not found"
    ap_name = func_dict['get_apartment_by_id'](res[0]).name
    st += "Apartment name and ID: " + ap_name + " [%d]" % res[0] + " "
    st += "Start date: " + str(res[1]) + " "
    st += "End date: " + str(res[2]) + " "
    return st


def is_active(res):
    global today
    if res != "" and res is not None and len(res) >= 2:
        d1 = datetime.datetime.strptime(res[1], "%Y-%m-%d").date()
        d2 = datetime.datetime.strptime(res[2], "%Y-%m-%d").date()
        if d1 > today:
            return True
    return False
