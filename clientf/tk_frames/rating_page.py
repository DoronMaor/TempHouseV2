#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    May 03, 2022 04:42:50 PM +0300  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import clientf.tk_frames.rating_page_support as rating_page_support

class win_lvl:
    def __init__(self, apartment_id, frame,func_dict, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("700x400+565+406")
        top.minsize(120, 1)
        top.maxsize(3604, 1061)
        top.resizable(0,  0)
        top.title("TempHouse - Review")
        top.configure(background="#d9d9d9")
        top.iconbitmap(r'pics/icon.ico')
        self.top = top

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.5, relwidth=1.0)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#f0ece9")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.0, rely=-0.017, height=81, width=720)
        self.Label1.configure(background="#eaddda")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Rate An Apartment''')

        self.Frame2 = tk.Frame(self.Frame1)
        self.Frame2.place(relx=0.014, rely=0.1, relheight=0.423, relwidth=0.314)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")
        self.Frame2.configure(background="#d9d9d9")

        self.score_canvas = tk.Canvas(self.Frame2)
        self.score_canvas.place(relx=-0.045, rely=0.197, relheight=0.839
                ,relwidth=1.091)
        self.score_canvas.configure(background="#91f0f0")
        self.score_canvas.configure(insertbackground="black")
        self.score_canvas.configure(relief="ridge")
        self.score_canvas.configure(selectbackground="blue")
        self.score_canvas.configure(selectforeground="white")

        self.rating_lbl = tk.Label(self.Frame1)
        self.rating_lbl.place(relx=0.0, rely=0.1, height=60, width=231)
        self.rating_lbl.configure(background="#f0ece9")
        self.rating_lbl.configure(compound='left')
        self.rating_lbl.configure(disabledforeground="#a3a3a3")
        self.rating_lbl.configure(foreground="#000000")
        self.rating_lbl.configure(text='''Rating''')

        self.rating_scale = tk.Scale(self.Frame1, from_=0.0, to=5.0)
        self.rating_scale.place(relx=0.029, rely=0.433, relheight=0.07, relwidth=0.284)

        self.rating_scale.configure(activebackground="#de549a")
        self.rating_scale.configure(background="#f0ece9")
        self.rating_scale.configure(cursor="star")
        self.rating_scale.configure(foreground="#211825")
        self.rating_scale.configure(highlightbackground="#c0c0c0")
        self.rating_scale.configure(highlightcolor="black")
        self.rating_scale.configure(length="199")
        self.rating_scale.configure(orient="horizontal")
        self.rating_scale.configure(resolution="0.5")
        self.rating_scale.configure(sliderrelief="solid")
        self.rating_scale.configure(troughcolor="#d9d9d9")
        # on change event, update the rating canvas
        self.rating_scale.bind("<ButtonRelease-1>", lambda x: rating_page_support.update_rating_canvas(self.rating_scale, self.score_canvas))

        self.rating_lbl_1 = tk.Label(self.Frame1)
        self.rating_lbl_1.place(relx=0.329, rely=0.1, height=61, width=470)
        self.rating_lbl_1.configure(activebackground="#f9f9f9")
        self.rating_lbl_1.configure(activeforeground="black")
        self.rating_lbl_1.configure(background="#f8d5c1")
        self.rating_lbl_1.configure(compound='left')
        self.rating_lbl_1.configure(disabledforeground="#a3a3a3")
        self.rating_lbl_1.configure(foreground="#000000")
        self.rating_lbl_1.configure(highlightbackground="#d9d9d9")
        self.rating_lbl_1.configure(highlightcolor="black")
        self.rating_lbl_1.configure(text='''Review:''')

        self.comment_txt = tk.Text(self.Frame1)
        self.comment_txt.place(relx=0.329, rely=0.2, relheight=0.328, relwidth=0.661)
        self.comment_txt.configure(background="white")
        self.comment_txt.configure(cursor="fleur")
        self.comment_txt.configure(font="TkTextFont")
        self.comment_txt.configure(foreground="black")
        self.comment_txt.configure(highlightbackground="#d9d9d9")
        self.comment_txt.configure(highlightcolor="black")
        self.comment_txt.configure(insertbackground="black")
        self.comment_txt.configure(selectbackground="#b7dcf7")
        self.comment_txt.configure(selectforeground="white")
        self.comment_txt.configure(wrap="word")

        self.submit_but = tk.Button(self.Frame1)
        self.submit_but.place(relx=0.014, rely=0.55, height=54, width=679)
        self.submit_but.configure(activebackground="#ececec")
        self.submit_but.configure(activeforeground="#000000")
        self.submit_but.configure(background="#244244")
        self.submit_but.configure(compound='left')
        self.submit_but.configure(cursor="fleur")
        self.submit_but.configure(disabledforeground="#a3a3a3")
        self.submit_but.configure(foreground="#ffffff")
        self.submit_but.configure(highlightbackground="#d9d9d9")
        self.submit_but.configure(highlightcolor="black")
        self.submit_but.configure(pady="0")
        self.submit_but.configure(text='''Submit review''')
        self.submit_but.configure(command=lambda x=1:
            func_dict.get("rate_apartment_server")(apartment_id, self.comment_txt.get("1.0",END), self.rating_scale.get(), self.top))

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

def start_up(apartment_id, frame, func_dict, top):
    rating_page_support.main(apartment_id, frame, func_dict, top)

if __name__ == '__main__':
    rating_page_support.main()




